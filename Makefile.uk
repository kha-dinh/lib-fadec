#
#  Copyright (c) 2019, NEC Laboratories Europe GmbH, NEC Corporation.
#                      All rights reserved.
#
#  Redistribution and use in source and binary forms, with or without
#  modification, are permitted provided that the following conditions
#  are met:
#
#  1. Redistributions of source code must retain the above copyright
#     notice, this list of conditions and the following disclaimer.
#  2. Redistributions in binary form must reproduce the above copyright
#     notice, this list of conditions and the following disclaimer in the
#     documentation and/or other materials provided with the distribution.
#  3. Neither the name of the copyright holder nor the names of its
#     contributors may be used to endorse or promote products derived from
#     this software without specific prior written permission.
#
#  THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS"
#  AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
#  IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE
#  ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE
#  LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR
#  CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF
#  SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS
#  INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN
#  CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)
#  ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE
#  POSSIBILITY OF SUCH DAMAGE.
#


################################################################################
# Register with unikraft
################################################################################
# $(eval $(call addlib_s,libfadec, $(CONFIG_LIBFADEC)))
$(eval $(call addlib,libfadec))

################################################################################
# Sources
################################################################################
LIBFADEC_COMMIT_HASH=4ac9b8e12e488d061bbca70502e6798da69992d3
LIBFADEC_URL=https://codeload.github.com/aengelke/fadec/zip/$(LIBFADEC_COMMIT_HASH)
$(eval $(call fetchas,LIBFADEC,$(LIBFADEC_URL),fadec-$(LIBFADEC_COMMIT_HASH).zip))

# LIBFADEC_PATCHDIR=$(LIBFADEC_BASE)/patches
# $(eval $(call patch,LIBFADEC,$(LIBFADEC_PATCHDIR),fadec-$(LIBFADEC_COMMIT_HASH)))

################################################################################
# Helpers
################################################################################
LIBFADEC_EXTRACTED=$(LIBFADEC_ORIGIN)/fadec-$(LIBFADEC_COMMIT_HASH)
LIBFADEC_INSTRS_TXT=$(LIBFADEC_EXTRACTED)/instrs.txt
LIBFADEC_PARSE_INSTRS=$(LIBFADEC_EXTRACTED)/parseinstrs.py

################################################################################
# App-specific Targets
################################################################################
ifneq ($(CONFIG_LIBFADEC_ARCH_ONLY_64),y)
LIBFADEC_GEN_FLAG += --32 
endif

ifneq ($(CONFIG_LIBFADEC_ARCH_ONLY_32),y)
LIBFADEC_GEN_FLAG += --64
endif

# Using Python the script to generate tables used for encoding and decoding 
ifeq ($(CONFIG_LIBFADEC_DECODE),y)
$(LIBFADEC_BUILD)/.decodetbl:
	$(call verbose_cmd,DECODETBL,libfadec:  $(notdir $@), \
				cd $(LIBFADEC_EXTRACTED) && \
				python3 $(LIBFADEC_PARSE_INSTRS) decode $(LIBFADEC_INSTRS_TXT) \
				$(LIBFADEC_EXTRACTED)/fadec-decode-public.inc \
				$(LIBFADEC_EXTRACTED)/fadec-decode-private.inc $(LIBFADEC_GEN_FLAG) && \
       	$(TOUCH) $@)
UK_PREPARE += $(LIBFADEC_BUILD)/.decodetbl
endif


ifeq ($(CONFIG_LIBFADEC_ENCODE),y)
$(LIBFADEC_BUILD)/.encodetbl:
	$(call verbose_cmd,ENCODETBL,libfadec:  $(notdir $@), \
				cd $(LIBFADEC_EXTRACTED) && \
				python3 $(LIBFADEC_PARSE_INSTRS) encode $(LIBFADEC_INSTRS_TXT) \
				$(LIBFADEC_EXTRACTED)/fadec-encode-public.inc \
				$(LIBFADEC_EXTRACTED)/fadec-encode-private.inc $(LIBFADEC_GEN_FLAG) && \
       	$(TOUCH) $@)
UK_PREPARE += $(LIBFADEC_BUILD)/.encodetbl
endif


ifeq ($(CONFIG_LIBFADEC_ENCODE2),y)
$(LIBFADEC_BUILD)/.encode2tbl:
	$(call verbose_cmd,ENCODE2TBL,libfadec:  $(notdir $@), \
				cd $(LIBFADEC_EXTRACTED) && \
				python3 $(LIBFADEC_PARSE_INSTRS) encode2 $(LIBFADEC_INSTRS_TXT) \
				$(LIBFADEC_EXTRACTED)/fadec-encode2-public.inc \
				$(LIBFADEC_EXTRACTED)/fadec-encode2-private.inc $(LIBFADEC_GEN_FLAG) && \
       	$(TOUCH) $@)
UK_PREPARE += $(LIBFADEC_BUILD)/.encode2tbl
endif


################################################################################
# App includes, compile flags
################################################################################
LIBFADEC_CINCLUDES += -I$(LIBFADEC_EXTRACTED)
CINCLUDES-$(CONFIG_LIBFADEC)	+= -I$(LIBFADEC_EXTRACTED)

################################################################################
# Global flags
################################################################################
LIBFADEC_CFLAGS-y       += -mno-sse
# LIBFADEC_CXXFLAGS       += -fno-exceptions -fno-rtti -std=c++11

################################################################################
# Fadec sources
################################################################################
ifeq ($(CONFIG_LIBFADEC_DECODE),y)
LIBFADEC_SRCS-y += $(LIBFADEC_EXTRACTED)/decode.c
LIBFADEC_SRCS-y += $(LIBFADEC_EXTRACTED)/format.c
endif

ifeq ($(CONFIG_LIBFADEC_ENCODE),y)
LIBFADEC_SRCS-y += $(LIBFADEC_EXTRACTED)/encode.c
endif

ifeq ($(CONFIG_LIBFADEC_ENCODE2),y)
LIBFADEC_SRCS-y += $(LIBFADEC_EXTRACTED)/encode2.c
endif
